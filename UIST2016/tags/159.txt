WhammyPhone: Exploring Tangible Audio Manipulation
Using Bend Input on a Flexible Smartphone
Antonio Gomes
Human Media Lab
Queen’s University
Kingston, ON, Canada
gomes@cs.queensu.ca

Lahiru Priyadarshana
Human Media Lab
Queen’s University
Kingston, ON, Canada
lahiru@cs.queensu.ca

Juan Pablo Carrascal
Human Media Lab
Queen’s University
Kingston, ON, Canada
jp@cs.queensu.ca

Roel Vertegaal
Human Media Lab
Queen’s University
Kingston, ON, Canada
roel@cs.queensu.ca

ABSTRACT

We present WhammyPhone, a novel audio interface that
supports physical manipulation of digital audio through bend
gestures. WhammyPhone combines a high-resolution
flexible display, bend sensors, and a set of intuitive
interaction techniques that enable novice users to manipulate
sound in a tangible fashion. With WhammyPhone, bend
gestures can control both discrete (e.g. triggering a note) and
continuous parameters (e.g. pitch bend). We showcase
application scenarios that leverage the unique input
modalities of WhammyPhone and discuss its potential for
digital audio manipulation.
Author Keywords

Figure 1. WammyPhone modulating electronic music loops.

Flexible Displays; Bend Input; Sound Mixing; Organic User
Interfaces; Tangible Interaction; Music Interfaces.

and keys. Research in new interfaces for musical expression
[4,8,9,11,18,19] has explored how specialized digital audio
workstations can be complemented with tangible artifacts
thus providing musicians with the ability to physically
manipulate and create sound in real-time performances. In
recent years, OUIs [17] paved the way for a new generation
of technologies and materials for computer input and display.
Specifically, flexible display interactions are an increasingly
popular field of study. While explorations like BendFlip [7],
PaperPhone [5] and ReFlex [15] have effectively
demonstrated the potential of bend gesturing as an input
methodology to navigate and interact with digital content, to
our knowledge, there has not been a systematic exploration
of audio manipulation using flexible display devices.

ACM Classification Keywords

H.5.5. Information interfaces and presentation - Sound and
Music Computing: Methodologies and Techniques.
INTRODUCTION

Digital technologies offer unprecedented opportunities for
the creation and manipulation of sound. With the ubiquity of
laptops and tablet computers, digital audio workstations
(DAWs) geared towards touch screens and mobile form
factors have become widespread and continue to grow in
popularity. GarageBand [3] and Caustic [6] are just a few
examples of desktop audio interfaces that have been made
available on mobile platforms. While these tools have been
simplified to overcome the lack of screen real estate in
portable devices, they are limited in their audio control
capabilities in comparison to their desktop counterparts.
Furthermore, most of these tools rely on touch interaction to
manipulate audio parameters, falling short in providing the
haptic qualities otherwise offered by physical knobs, faders

WhammyPhone: A Tangible Flexible Musical Interface

We created WhammyPhone, a flexible smartphone featuring
a high-resolution, touch-sensitive flexible display and a bend
sensor array (Figure 1). WhammyPhone addresses some of
the occlusion and fat-finger issues associated with small
display devices, by allowing users to tangibly manipulate
sound parameters (e.g., pitch, panning, delay) by means of
physical deformation of the device in addition to traditional
touch-based interactions. This creates possibilities for new
multimodal interfaces that offer rich interaction techniques
for expressive musical control.

Permission to make digital or hard copies of part or all of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that copies
bear this notice and the full citation on the first page. Copyrights for thirdparty components of this work must be honored. For all other uses, contact
the Owner/Author.
Copyright is held by the owner/author(s).
UIST'16 Adjunct, October 16-19, 2016, Tokyo, Japan
ACM 978-1-4503-4531-6/16/10.
http://dx.doi.org/10.1145/2984751.2985742n unique DOI string to be
included here.

RELATED WORK
Flexible Musical Interfaces

The need to add tangibility to computer music performance
has motivated innovation in the field of user interfaces. Some

159

Sound generation

researchers have proposed that the elastic quality offered by
tangible deformable devices improve the expressiveness in
audio manipulation because of their haptic feedback
properties [10,13]. Rowland and Freed [12] demonstrated
different approaches to collocate surface interaction and
sound with paper, fabric and printed conductors on malleable
plastic. Dahl et al. [13] used a flexible metal strip to directly
manipulate a wavetable. The interaction with high resolution
flexible displays have only recently become a reality, thus
has not been explored in musical interfaces. Troiano et al.
[10] conducted a user-centered study evaluating several
flexible and deformable interfaces for music performance.
They found that deformation is effective for embodying
control of musical parameters.

Our current implementation uses custom Ableton Live [1]
and Reaktor [16] patches for sound synthesis. It is possible,
however, to control any digital audio software via OSC. It
would also be possible to run a sound synthesizer app on the
device, effectively turning it into a completely self-contained
musical instrument.
APPLICATION EXAMPLES

We present three musical application scenarios for
WhammyPhone. Each application utilizes bend input and
touch to control audio operation and sound effects.
Guitar Effects Demo

In the Guitar Effects demonstration, users control the effects
and pitch of an electric guitar with a virtual tube amplifier.
Strings are played by touching the display. Users can then
apply a full screen bend to control pitch bend of the string up
and down, as if they were bending the string or using a
Whammy Bar. Dog earing is used to control the amount of
pre-gain of the virtual tube amp, and the amount of Overdrive
distortion applied. It provides a highly effective example of
how bend input helps gain expressiveness through haptic,
elastic control in artistic applications.

Flexible Display Interfaces

Recent research on flexible displays for mobile computing
have successfully demonstrated the potential of bend input to
interact with digital content. BendFlip [7] investigated form
factors and input techniques for flexible devices, with a focus
on document navigation tasks. PaperPhone [5] evaluated the
effectiveness of bend gestures to execute common
computing actions on a flexible e-ink display. More recently,
ReFlex [15] showcased a flexible smartphone with passive
and active haptic feedback, introducing sensations such as
friction and resistance. We borrow from the aforementioned
explorations when designing a tangible musical interface
deployed on a flexible smartphone. This allows the use of
physical deformation as a means to manipulate sound.

EDM Loop Control

The Electronic Dance Music (EDM) Loop demonstration
showcases how users can control effects and loops of prerecorded audio samples in Ableton Live using screen bends.
Users activate or deactivate sample plays in Ableton Live
using touch buttons. Full screen bends can then, e.g., be used
to increase or decrease the loop speed of the sequence, while
corner bends are used to control the application of audio
effects, e.g., a low pass filter’s cutoff frequency.

IMPLEMENTATION

WhammyPhone is a flexible smartphone prototype with
integrated bend sensors. Our prototype can be used as a
stand-alone device running Android 4.2 or as a peripheral
input device for controlling any music software.

Bowed Violin Control

In Bowed Violin we present a bowing interface for a software
physical model of a violin (Chet Singer’s ‘Serenade’
ensemble in Reaktor). Users use touch input to play a string.
Here, a full screen bend controls the position and force of the
bow on the string: the bow is moved back and forth by
bending and flattening the display. The speed of this gesture
controls the speed and pressure of the bow. Bending the left
corner of the display in this demonstration controls the
amplitude of a vibrato applied to the tone.

Display

WhammyPhone uses a 6.0” Flexible OLED (FOLED)
display with a resolution of 1280 x 720 pixels and a refresh
rate of 60 Hz. The display is mounted on a flexible substrate
that extends 5 cm to one of it sides. This allows mounting of
a rigid Android circuit board.
Input

WhammyPhone measures bend gestures applied to the
corners and body of the device via 3 Flexpoint 2” bidirectional bend sensors. An Arduino Pro Micro
microcontroller samples the bend sensors at a sample rate of
76.8KHz and transmits data over a Bluetooth link to a host
computer. WhammyPhone’s display is also equipped with a
high resolution multi-touch sensor, which we use for
triggering notes or samples. We use the TouchOSC [20]
application on WhammyPhone to customize the touch-based
controls.

CONCLUSION

We presented WhammyPhone, a tangible audio
manipulation interface that uses bend gestures to create and
manipulate audio on a flexible smartphone. We describe
application examples that use bend+touch input to
manipulate sound parameters. Our prototype is a first step
towards flexible mobile audio manipulation platforms that
are able to effectively mimic some of the tactile affordances
associated with traditional and digital audio workstations.

Software

ACKNOWLEDGMENTS

Our prototype employs Ableton’s Connection Kit [2] to
receive data from the microcontroller and to translate them
into musical parameters. Data from TouchOSC is translated
from OSC [14] to MIDI using TouchOSC MIDI Bridge.

We thank Travis Rhee, Cristopher Radford, Yesh Li and
Addie Stewart for developing an early demonstration of
some of the application examples described in this paper.

160

REFERENCES

10. Giovanni, M.T., Esben, W.P. and Kasper, H.
Deformable Interfaces for Performing Music. In Proc.
CHI ’16, ACM PRESS (2016), 377–386.

1. Ableton Live. https://www.ableton.com/en
2. Ableton Connection Kit.
https://www.ableton.com/en/packs/connection-kit

11. Ivan, P., Michael, L., Sidney. F. and Tina, B. New
interfaces for musical expression. In CHI EA’01, ACM
Press (2001), 491–492.

3. Apple GarageBand for iOS.
www.apple.com/ios/garageband

12. Jess, R., and Adrian F. Colocated surface sound
interaction. In CHI EA ’13, ACM PRESS (2013), 3047.

4. Bert, S., and Jean, V. AudioCubes: a Distributed Cube
Tangible Interface based on Interaction Range for Sound
Design. In Proc. TEI ’08, ACM Press (2008), 3-10.

13. Luke, D., Nathan, W., and John, V.S. The WaveSaw: a
flexible instrument for direct timbral manipulation. In
Proc. NIME ’07, ACM (2007), 270–272.

5. Byron, L., Audrey, G., Winslow, B., and Roel, V.
PaperPhone: Understanding the Use of Bend Gestures in
Mobile Devices with Flexible Electronic Paper
Displays. In Proc. CHI ’11, ACM Press (2011), 13031312.

14. Open Sound Control. http://opensoundcontrol.org
15. Paul, S., et al. ReFlex: A Flexible Smartphone with
Active Haptic Feedback for Bend Input. In Proc. TEI ’16,
ACM PRESS (2016), 185–192.

6. Caustic. www.singlecellsoftware.com/caustic
7. Doug, W., Tim, G., and Roel, V. BendFlip: Examining
Input Techniques for Electronic Book Readers with
Flexible Form Factors. In Proc. INTERACT ’11, 117133.

16. Reaktor 6. www.nativeinstruments.com/en/products/komplete/synths/reaktor-6
17. Roel., V., and Ivan, P. Organic User Interfaces. Comm
ACM, 51(6), (2008), 26-30.

8. Engin, B., Amit, D., Nancy, Otero., and Paulo, B.
BeatTable: a tangible approach to rhythms and ratios. In
Proc. IDC ’13, ACM (2013), 589-592.

18. Sergi, J., Günter G., Marcos, A., and Martin, K. The
reacTable: Exploring the Synergy between Live Music
Performance and Tabletop Tangible Interfaces. In Proc.
TEI ’07, ACM Press (2007), 139-146.

9. Frederic, B., et al. SIG NIME: Music, Technology, and
Human-Computer Interaction. In CHI EA’13, ACM
(2013) 2529–2532.

19. Sidney, F. and Michael L. Creating new interfaces for
musical expression: introduction to NIME. Proc.
SIGGRAPH, (2009), Article No. 11.
20. TouchOSC. http://hexler.net/software/touchosc

161

